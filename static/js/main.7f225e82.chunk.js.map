{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["alert","props","react_default","a","createElement","className","concat","type","role","msg","word","toLowerCase","charAt","toUpperCase","slice","capitalize","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggle","htmlFor","Form","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","style","backgroundColor","bg","color","cl","onChange","event","target","value","rows","blueMode","isBlue","split","length","App","setMode","_useState3","_useState4","setalert","_useState5","_useState6","et","set","_useState7","_useState8","sbg","_useState9","_useState10","scl","showAlert","message","setTimeout","search","document","body","Alert_alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7f225e82.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function alert(props) {\r\n\r\nconst capitalize = (word)=>{\r\nconst a = word.toLowerCase();\r\nreturn  a.charAt(0).toUpperCase() + a.slice(1) ;\r\n\r\n}\r\n\r\n  return (\r\n     props.alert &&\r\n    <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n     <strong>{props.alert.msg}</strong> : {capitalize(props.alert.type)} \r\n\r\n   </div>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nexport default function Navbar(props) {\r\n  return (\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>   \r\n      </div>\r\n      <form className=\"d-flex\" role=\"search\">\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n","import React ,{useState} from 'react'\r\n\r\nexport default function Form(props) {\r\n  let [text , setText] = useState(\"\");\r\nconst UpperClick = ()=>{\r\nconst a = text.toUpperCase();\r\nsetText(a);\r\n// props.showAlert(\"converted to UpperCase\", 'success')\r\n}\r\n\r\nconst LowerClick = () =>{\r\n  const a = text.toLowerCase();\r\n  setText(a);\r\n//   props.showAlert(\"converted to lowercase\", 'success')\r\n \r\n}\r\nconst handleOnChange = (event)=>{\r\n  setText(event.target.value)\r\n}\r\nconst clear = () =>{\r\n  setText(\"\");\r\n//   props.showAlert(\"Text cleared\" , \"success\")\r\n}\r\n\r\n\r\nreturn (\r\n    <>\r\n     <div className='container'>\r\n     <h2>{props.heading}</h2>\r\n    <div className=\"mb-3\">\r\n  </div>\r\n<div className=\"mb-3\">\r\n\r\n  <textarea className=\"form-control\" style = {{backgroundColor : props.bg , color : props.cl}} onChange = {handleOnChange} value= {text}  id=\"myBox\" rows=\"8\"></textarea>\r\n  </div>\r\n\r\n<button className=\"btn btn-outline-danger mx-2\" onClick={UpperClick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-outline-danger mx-2\" onClick={LowerClick}>Convert to LowerCase</button>\r\n<button className=\"btn btn-outline-danger mx-2\" onClick={clear}>Clear</button>\r\n<button className=\"btn btn-outline-danger mx-2\" onClick={props.blueMode}>{props.isBlue}</button>\r\n\r\n</div>\r\n<div className=\"container my-2 mx-2\"style = {{backgroundColor : props.bg , color : props.cl}}>\r\n<h2>Our Text Summary....</h2>\r\n<p>Words in the text are {text.split(\" \").length} and the characters are {text.length}</p>\r\n<p>the above para can be read within {0.008 * (text.split(\" \").length )} minutes</p>\r\n<h1>Preview</h1>\r\n<p><b>{text.length >0 ? text : \"Enter text to preview\"}</b></p>\r\n</div>\r\n</>\r\n  )\r\n}\r\n\r\n","import './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport React , {useState} from 'react'\nimport Form from './Components/Form';\n\nfunction App() {\nconst [mode , setMode] = useState('light');\nconst [alert, setalert] = useState(null);\nconst [et, set] = useState(\"Enable Blue Mode\");\nconst [bg, sbg] = useState(\"white\");\nconst [cl, scl] = useState(\"black\");\n\n\n\n const  showAlert = (message , type) =>{\n     setalert({\n        msg : message ,\n        type : type\n     })\n     setTimeout(() => {\n      setalert(null);\n     }, 3000);\n }\n\n  const toggle = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      sbg('grey')\n      scl('white')\n      document.body.style.backgroundColor = 'grey'\n      showAlert(\"darkMode is enabled\", 'success')\n    \n    }else{\n      setMode('light')\n      sbg('white')\n      scl('black')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"LightMode is enabled\", 'success')\n  \n    }\n  }\n\n  const blueMode = () =>{\n    showAlert(\"BlueMode is enabled\", 'success')\n\n    if(et ==='Enable Blue Mode'){\n      set('Disable Blue Mode')\n      setMode('info')\n      sbg('blue')\n      scl('white')\n\n      document.body.style.backgroundColor = 'blue'  \n\n    }\n   else{\n    sbg('white')\n    scl('black')\n\n    set('Enable Blue Mode')\n    setMode('light')\n    document.body.style.backgroundColor = 'white'  \n\n  }\n  }\n\n  return ( \n<>\n    <Navbar title = \"Sscorromech\" mode = {mode} search = \"Click\" toggle={toggle}/>\n     <Alert alert = {alert}/>\n\n    <div className='container my-3' >\n <Form isBlue ={et} blueMode = {blueMode} bg= {bg}  cl={cl}/>\n\n\n  </div>\n</>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}